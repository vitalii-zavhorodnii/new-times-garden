name: Deploy on development VPS

on:
  pull_request:
    branches: ["main"]
    types: ["closed"]
  push:
    branches: ["main"]

  workflow_dispatch:

jobs:
  lint:
    name: ESLint check
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Install ESLint
        run: |
          npm install eslint@latest
          npm install @microsoft/eslint-formatter-sarif@latest
      - name: Run lint
        run: npx eslint .
          --config .eslintrc.js
          --ext .ts,.js
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif

  build:
    name: Build
    needs: [lint]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          clean: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          check-latest: true

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build:react

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: client-app
          path: ./apps/react/dist
          if-no-files-found: error
          compression-level: 0
          overwrite: true

  deploy:
    name: Deploy
    needs: [lint, build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploying using SSH
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: 22
          script: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
            export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install latest
            cd /projects/new-times-garden/
            git status
            git stash
            git checkout main
            git pull origin main
            npm install
            pm2 stop api

            npm run build:api

            rm -rf apps/client/dist/*
            npm run build:client

            rm -rf apps/react/dist/*
            npm run build:react

            rm -rf apps/api/static/*
            mv apps/client/dist/* apps/api/static
            pm2 restart api --name=api --watch
